import { Suspense, useEffect, useState } from "react";
import { Canvas } from "@react-three/fiber";
import { useGLTF } from "@react-three/drei";
import { useTranslation } from "react-i18next";
import { Container } from "../layout/Container";
import { GLTF } from "three-stdlib";

type ModelProps = {
  url: string;
};

function Model({ url }: ModelProps) {
  const gltf = useGLTF(url) as GLTF;
  return <primitive object={gltf.scene} scale={1.5} />;
}

export const NewAbout = () => {
  const { t } = useTranslation();
  const [lightPos, setLightPos] = useState<[number, number, number]>([0, 0, 5]);

  useEffect(() => {
    const handleMouseMove = (event: MouseEvent) => {
      const x = (event.clientX / window.innerWidth) * 2 - 1;
      const y = -(event.clientY / window.innerHeight) * 2 + 1;
      setLightPos([x * 5, y * 5, 5]);
    };
    window.addEventListener("mousemove", handleMouseMove);
    return () => window.removeEventListener("mousemove", handleMouseMove);
  }, []);

  return (
    <Container className="min-h-screen flex items-center justify-center">
      <div className="w-96 h-96 max-w-full">
        <Canvas shadows camera={{ position: [0, 0, -2], fov: 50 }}>
          <ambientLight intensity={0.5} />
          <directionalLight
            position={lightPos}
            intensity={1.5}
            castShadow
            shadow-mapSize-width={1024}
            shadow-mapSize-height={1024}
          />

          <Suspense fallback={null}>
            <Model url="/models/logo.glb" />
          </Suspense>
        </Canvas>
      </div>
    </Container>
  );
};
