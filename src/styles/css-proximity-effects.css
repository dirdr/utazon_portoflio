/* CSS-only proximity effect using modern CSS features */
/* Note: This is a simplified approach that works for hover states */

.proximity-button {
  position: relative;
  overflow: hidden;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.proximity-button::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(
    circle at var(--mouse-x, 50%) var(--mouse-y, 50%),
    rgba(255, 255, 255, 0.1) 0%,
    rgba(255, 255, 255, 0.05) 30%,
    transparent 60%
  );
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
}

.proximity-button:hover::before {
  opacity: 1;
}

/* Enhanced version with container queries (modern browsers) */
@container (min-width: 0px) {
  .proximity-container {
    container-type: inline-size;
    position: relative;
  }
  
  .proximity-button-enhanced {
    position: relative;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.1),
      rgba(255, 255, 255, 0.05)
    );
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
  }
  
  .proximity-button-enhanced:hover {
    transform: scale(1.05);
    box-shadow: 
      0 10px 40px rgba(0, 0, 0, 0.2),
      0 0 20px rgba(255, 255, 255, 0.1);
  }
}

/* Intersection Observer-based approach (requires minimal JS) */
.proximity-zone {
  position: relative;
}

.proximity-zone[data-in-view="true"] .proximity-element {
  transform: scale(1.02);
  opacity: 0.9;
}

.proximity-element {
  transition: all 0.6s cubic-bezier(0.25, 0.8, 0.25, 1);
  transform: scale(1);
  opacity: 0.7;
}