name: ci-pipeline
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Docker Tag (version)"
        required: true
jobs:
  quality-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Build application
        run: npm run build

  build-and-push:
    runs-on: ubuntu-latest
    needs: quality-checks
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update package.json version
        run: |
          npm version ${{ github.event.inputs.tag }} --no-git-tag-version
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add package.json
          git commit -m "chore: bump version to ${{ github.event.inputs.tag }}"
          git push

      - name: Create Git Tag
        run: |
          git tag v${{ github.event.inputs.tag }}
          git push origin v${{ github.event.inputs.tag }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/utazon-portfolio:${{ github.event.inputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.tag }}
          release_name: Release v${{ github.event.inputs.tag }}
          body: |
            Release version ${{ github.event.inputs.tag }}

            âœ… All quality checks passed:
            - Code compilation: âœ…
            - Tests: âœ…  
            - Linting: âœ…

            ðŸ“¦ Docker image: ${{ secrets.DOCKER_USERNAME }}/utazon-portfolio:${{ github.event.inputs.tag }}
          draft: false
          prerelease: false
